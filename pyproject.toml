[project]
name = "new_gateway"
version = "0.1.0"
description = "orbcomm_gateway"
readme = "README.md"
authors = [{name = "Aaron Porter", email = "aaron.porter12@yahoo.com"}]
license = {text = "MIT"}
requires-python = ">=3.11.6"
keywords = ["gateway", "fastapi", "redis", "sqlalchemy"]

dependencies = [
    "fastapi>=0.100.0",
    "uvicorn>=0.22.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    "redis>=4.5.0",
    "boto3>=1.26.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "aiohttp>=3.8.0",
    "asyncio>=3.4.3",
    "python-dotenv>=1.0.0",
    "lupa>=2.0",
    "prometheus-client>=0.17.0",
    "httpx>=0.24.0",
    "types-python-jose>=3.3.0",
    "types-redis>=4.5.0",
    "types-pyjwt>=1.7.1",
    "PyJWT>=2.0.0",
    "typer>=0.9.0",
    "requests (>=2.32.3,<3.0.0)",
    "asyncpg>=0.30.0",
    "psycopg2-binary>=2.9.9",
    "psutil>=5.9.0",
]

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
aiosqlite = "^0.21.0"
email-validator = "^2.2.0"
psycopg2-binary = "^2.9.10"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.3"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
pytest-env = "^1.1.5"
lizard = ">=1.17.10"


[project.urls]
Homepage = "https://github.com/aaronporter12/new_gateway"
Repository = "https://github.com/aaronporter12/new_gateway"
Documentation = "https://github.com/aaronporter12/new_gateway/wiki"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]  # Retained for settings that don't belong in [project]
packages = [{include = "src"}]



[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = ">=23.3.0"
isort = ">=5.12.0"
flake8 = ">=6.0.0"
mypy = ">=1.3.0"
pre-commit = ">=3.3.0"
autoflake = ">=2.3.1"
bandit = ">=1.7.5"
lizard = "^1.17.19"


[project.scripts]
gateway = "src.main:app"

[tool.black]
line-length = 120
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
namespace_packages = true
explicit_package_bases = true
mypy_path = "src"
exclude = ["tests/*"]
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = ["jwt.*", "redis.*", "pydantic.*", "fastapi.*", "sqlalchemy.*"]
ignore_missing_imports = true

[tool.pylint]
init-hook='import sys; sys.path.append("src")'
ignore = ["CVS"]
ignore-patterns = ["^\\.#"]
persistent = "yes"
py-version = "3.11"
fail-under = 10.0
disable = ["W0621"]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
log_cli = true
log_cli_level = "INFO"
filterwarnings = [
    "ignore::DeprecationWarning:passlib.*:",
    "ignore::DeprecationWarning:.*crypt",
    "ignore::UserWarning:passlib.handlers.bcrypt",
]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
]

[tool.bandit]
exclude_dirs = ["src/tests", "scripts"]
targets = ["protocols"]
