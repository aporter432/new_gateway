# Development image
ARG TARGETPLATFORM=linux/arm64
FROM --platform=${TARGETPLATFORM} node:18-alpine

WORKDIR /app

# Install dependencies needed for development
RUN apk add --no-cache curl

# Create necessary directories and set permissions
RUN mkdir -p /app/.next /app/node_modules /app/.cache /app/src /app/public && \
    chown -R node:node /app

# Switch to non-root user
USER node

# Copy package files
COPY --chown=node:node package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application
COPY --chown=node:node . .

# Install TypeScript and types if not present
RUN npm install --save-dev typescript @types/react @types/node @types/react-dom

# Initialize TypeScript configuration if needed
RUN if [ ! -f tsconfig.json ]; then npx tsc --init; fi

# Let Next.js handle next-env.d.ts creation
RUN rm -f next-env.d.ts

# Set development environment
ENV NODE_ENV=development
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3001
ENV HOST=0.0.0.0

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# Start development server
CMD ["npm", "run", "dev"] 